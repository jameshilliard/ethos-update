#!/bin/bash
# ethOS Update Script
# LICENSE AGREEMENT
#
# File Version See $VERSION Variable (c) 2016 Dale Chapman, sling00@gmail.com (“Author”).
#
# By using this file, you agree to the following:
#
# This file has been licensed to gpuShack for the exclusive use and distribution as part of ethOS. All other previous licenses
# of this file have been revoked. This license does not expire and allows for any modification, distribution, and/or derivative work
# by gpuShack and by the Author. This license extends to gpuShack’s owners, operators, officers, and contractors, where
# applicable.
#
# The Author expressly forbids and revokes usage of this file, as well as any previous iterations of this file, in any
# operating system other than ethOS. Any fork of ethOS, third party or otherwise, may not use this file without express written
# permission from the Author.
#
# Personal Use
#
# End users may modify and use this script for personal use, but may not redistribute or include in a larger work, in whole, or
# in part, without express written permission from the Author.
#
# Version History
#
# v1.x - EthOS Release
# v.1 - Development Release
#
# Portions derived from previous work by Author
#
# Red Goat License (v) 1.0
#
# This file is released under the "Small Goat with Red Eyes" license. Breaking the above license agreement will result in a
# small goat with red eyes visiting you while you sleep.

if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root, please rerun as \"sudo ethos-update\"" 
   exit 1
fi
#UPDATESERVER="http://update.ethosdistro.com/ethos-updates/"
DEVELOPMENT="0"
function DATE() {
      echo `date -u`
}
exec 3>$(tty)
CURLARGS="-f -s -S -k"
SCRIPT_VERSION="1.77"
RELEASEVERSION="1.1.1"
DEVELOPVERSION="1.1.2"
DEVELOPVERSION_SUFFIX="b8"
PACKAGES_MARK=""
PACKAGES_ADD=""
PACKAGES_REMOVE=""
ETHOSVERSION=$(grep -Poi "(\d+\.\d+\.\d+)" /opt/ethos/etc/version)
HOSTNAME=$(cat /etc/hostname)
if [ "$ETHOSVERSION" = "1.0" ]; then
  CONF="/home/ethos/local"
else
  CONF="/home/ethos/local.conf"
fi
#UPDATEATITWEAK="0"
#UPDATEGRUB="0"
#UPDATEINITRAMFS="0"
#UPDATEPROXY="0"

echo "$(DATE) - ethOS update on $HOSTNAME starting..."
echo "$(DATE) - ethOS update on $HOSTNAME starting..." > /var/log/ethos-update.log
BRANCH=$(grep -Po "(?<=^branch.$HOSTNAME.)(.*)" "$CONF" | xargs)
if [ -z "$BRANCH" ]; then
  BRANCH=$(grep -Po "(?<=^globalbranch.)(.*)" "$CONF" | xargs)
fi
if [ -z "$BRANCH" ];then
  BRANCH="release"
fi
if [ "$BRANCH" = "development" ];then
  NEWVERSION="$DEVELOPVERSION"
  NEWVERSION_NUMBER="$DEVELOPVERSION$DEVELOPVERSION_SUFFIX"
else 
  NEWVERSION="$RELEASEVERSION"
  NEWVERSION_NUMBER="$RELEASEVERSION"
fi

#What driver are we using?
FGLRX=$(lsmod | grep -c fglrx)
AMDGPU=$(lsmod | grep -c amdgpu)
NVIDIA=$(lsmod | grep -c nvidia)
DRIVER=""
if [ -f "/opt/ethos/etc/driver.conf" ];then
  DRIVER=$(cat /opt/ethos/etc/driver.conf)
fi
if [ -z "$DRIVER" ]; then
   if [ "$FGLRX" -ge "1" ];then
     DRIVER="fglrx"
   elif [ "$AMDGPU" -ge "1" ];then
     DRIVER="amdgpu"
   elif [ "$NVIDIA" -ge "1" ];then
     DRIVER="nvidia"
   else
     echo "Unable to determine which driver is in use, falling back to fglrx" >> /var/log/ethos-update.log
     DRIVER="fglrx"
   fi
fi

if [ $DEVELOPMENT = "0" ];then
  exec 1>>/var/log/ethos-update.log
  exec 2>>/var/log/ethos-update.log
fi
function f.setpermissions() {
    chown -R ethos.ethos /home/ethos
    chown -R root.root /etc/init/ethos-*
    chown root.root /usr/share/initramfs-tools/scripts/init-top/gpulist
    chmod 755 /usr/share/initramfs-tools/scripts/init-top/gpulist
    chmod 0644 /home/ethos/.bashrc
    chown root.root /root/.bashrc
    chmod 0644 /root/.bashrc
    chown root.root /root/.profile
    chown -R ethos.ethos /opt/eth-proxy
}

function f.cleanupamdgpu(){
  if [ "$DRIVER" = "amdgpu" ]; then
  echo -n "." >&3
   echo "Cleaning up old amdgpu driver"
   rm -rf /usr/lib/x86_64-gnu-linux/amdgpu-pro /etc/{vulkan,gbm}
  fi
}

MIRROR1=$(getent hosts update.ethosdistro.com | cut -d " " -f 1)
echo "MIRROR1=$MIRROR1"
MIRROR2=$(getent hosts update2.ethosdistro.com | cut -d " " -f 1)
echo "MIRROR2=$MIRROR2"
DEVSERVER="http://$MIRROR2"
function f.mirrorselect.randomize() {
   #if [ "$(expr $RANDOM % 2")" -eq "0" ]; then
  if [ "$(( $RANDOM % 2 ))" -eq "0" ];then
    echo "Using update server: $MIRROR1"
    SERVER="http://$MIRROR1"
  else
    echo "Using update server: $MIRROR2"
    SERVER="http://$MIRROR2"
  fi
}

function f.mirrorselect(){
 echo -n "Update Server 1:" 
 SERVERSTATUS1=$(curl -s -o /dev/stderr -w "%{http_code}" "http://"$MIRROR1"/status/")
 echo -n "Update Server 2:"
  SERVERSTATUS2=$(curl -s -o /dev/stderr -w "%{http_code}" "http://"$MIRROR2"/status/")
 echo -n "Update Server 3:"
  SERVERSTATUS3=$(curl -s -o /dev/stderr -w "%{http_code}" "http://162.243.39.238/status/")
  S1AVAILABLE=$(curl $CURLARGS http://"$MIRROR1"/status/)
  S2AVAILABLE=$(curl $CURLARGS http://"$MIRROR2"/status/)
  S3AVAILABLE=$(curl $CURLARGS http://162.243.39.238/status/)
  if [ "$S1AVAILABLE" = "maintenance" ] && [ "$S2AVAILABLE" = "maintenance" ] && [ "$S3AVAILABLE" = "maintenance" ];then
    echo "Update servers are temporarily unavailable due to maintenance.  Please try again later."
    exit 1
  fi
  if [ "$SERVERSTATUS1" -ne "200" ] && [ "$SERVERSTATUS2" -ne "200" ] && [ "$SERVERSTATUS3" -ne "200" ];then
    echo "Update servers are unreachable. Please check your network connection, or try again later."
    exit 1
  fi
  if [ "$SERVERSTATUS1" = "200" ] && [ "$SERVERSTATUS2" = "200" ] && [ "$S1AVAILABLE" = "online" ] && [ "$S2AVAILABLE" = "online" ];then
    f.mirrorselect.randomize
  elif [ "$SERVERSTATUS1" = "200" ] && [ "$S1AVAILABLE" = "online" ];then
    SERVER="http://$MIRROR1"
  elif [ "$SERVERSTATUS2" = "200" ] && [ "$S2AVAILABLE" = "online" ];then
    SERVER="http://$MIRROR2"
  elif [ "$SERVERSTATUS3" = "200" ] && [ "$S3AVAILABLE" = "online" ] && [ "$SERVERSTATUS1" -ne "200" ] && [ "$SERVERSTATUS2" -ne "200" ];then
    SERVER="http://162.243.39.238"
  fi
}

f.mirrorselect

function f.function_exists() {
    echo "checking for function $1"
    declare -f -F $1 > /dev/null
    return $?
}

function f.checkdpkg(){
  DPKGLOCKED=$(lsof /var/lib/dpkg/lock 2>/dev/null | grep -c "/var/lib/dpkg/lock")
  WAITCOUNT="0"
  if [ "$DPKGLOCKED" -ge "1" ];then
    until [ "$DPKGPLOCKED" = "0" ] || [ "$WAITCOUNT" = "60" ]; do
     DPKGLOCKED=$(lsof /var/lib/dpkg/lock 2>/dev/null | grep -c "/var/lib/dpkg/lock")
     ((WAITCOUNT++))
    done
  fi
  if [ "$WAITCOUNT" -ge "120" ]; then
    echo "Timed out waiting on dpkg lock to clear."
    echo "manually clearing dpkg lock"
  rm -f /var/lib/dpkg/lock
  fi
}

function f.checkstatus(){
  `$@`
  if [ $? != "0" ];then
    case $1 in
     curl )
      error="Download of $3 failed"
     ;;
     md5sum )
      error="md5sum mismatch on file $3"
     ;;
     esac
     echo "$error"
     exit 1
  fi
}

function f.getpackage(){
  echo "get all the packages."
  if [ ! -f "/opt/ethos-update/updates/$NEWVERSION_NUMBER" ];then
    curl -o /tmp/$NEWVERSION_NUMBER.tar.xz "$SERVER"/packages/$NEWVERSION/$NEWVERSION_NUMBER.tar.xz
    curl -o /tmp/$NEWVERSION_NUMBER.md5sum "$SERVER"/packages/$NEWVERSION/$NEWVERSION_NUMBER.md5sum
    if [ $? -eq "0" ]; then
      md5sum -c /tmp/$NEWVERSION_NUMBER.md5sum 
      if [ $? -eq "0" ]; then
        tar xf /tmp/$NEWVERSION_NUMBER.tar.xz -C /opt/ethos-update/updates/
      else
        rm -f /tmp/$NEWVERSION_NUMBER.tar.xz
        echo "Verification of md5sum for $NEWVERSION.tar.xz failed, stopping update process."
      fi
    else
      echo "Download of $NEWVERSION.tar.xz failed, stopping update process."
    fi
  fi
}

if [ "$BRANCH" = "development" ]; then
  SERVER="$DEVSERVER/ethos-update-dev"
  SCRIPT_NEW_VERSION="$(curl $CURLARGS "$DEVSERVER"/ethos-updates/version/version)"
fi

SCRIPT_NEW_VERSION="$(curl $CURLARGS "$SERVER"/ethos-updates/version/version)"

function f.updatescript() {
    echo "Checking if ethos-update is up to date........"
  if [ $SCRIPT_NEW_VERSION \> $SCRIPT_VERSION ]; then
    echo "Getting latest version of ethos-update"
    #wget http://get.ethosdistro.com/ethos-updates/ethos-update/ethos-update.tar.gz -O /tmp/ethos-update.tar.gz
    curl -o /tmp/ethos-update.tar.xz "$SERVER"/ethos-updates/ethos-update/ethos-update.tar.xz
    if [ $? -eq "0" ]; then
      rm -rf /tmp/ethos-update/
      mkdir -p /tmp/ethos-update/
      tar xpf /tmp/ethos-update.tar.xz -C /tmp/ethos-update/
      if [ $? -eq "0" ]; then
        rm -rf /opt/ethos-update/*
        mv /tmp/ethos-update/ethos-update/* /opt/ethos-update/
        echo "Updated to latest version, relaunching."
        rm /tmp/ethos-update.tar.gz
        rm -rf /tmp/ethos-update/
        cd ~
        if [ ! -z "$1" ]; then
          exec /opt/ethos-update/ethos-update "$1"
        else 
          exec /opt/ethos-update/ethos-update
        fi
      else
        echo "Failed to extract etho-update tarball. Rerun script to try again."
      fi
    else 
      echo "Failed to download update from repo, try again in a few minutes."
      exit 0
    fi
  else 
    echo "Script up to date"
  fi
}

function f.latest() {
  if [ "$BRANCH" = "release" ]; then 
    chown -R ethos.ethos /home/ethos
    cp /opt/ethos-update/updates/1.1.1/opt/ethos/sbin/ethos-oc-amdgpu /opt/ethos/sbin/ethos-oc-amdgpu
    cp /opt/ethos-update/updates/1.1.1/opt/ethos/lib/functions.php /opt/ethos/lib/functions.php
    cp /opt/ethos-update/updates/1.1.1/opt/ethos/sbin/ethos-set-permissions /opt/ethos/sbin/ethos-set-permissions 
    exec 1>/dev/tty
    exec 2>/dev/tty
    echo "$(DATE) Your version of ethOS is up to date. Version: $ETHOSVERSION"  
  else
    echo "$(DATE) Installing latest development build $DEVELOPVERSION$DEVELOPVERSION_SUFFIX."
    f.do-update
  fi
}

function f.showprogress() {

    exec 1> /dev/null
    exec 3> /dev/tty
    while :;do echo -n . >&3 ;sleep 1;done &
    LOOPPID="$!"
    trap "kill $LOOPPID" EXIT  #Die with parent if we die prematurely
    $1;
    echo "Done" >&3
    kill "$LOOPPID" && trap " " EXIT 

}

function f.latest-develop() {
  exec 1>/dev/tty
  exec 2>/dev/tty
  echo "$(DATE) Your version of ethOS is up to date. Version: $ETHOSVERSION"  
}

function f.prerun() {
  /bin/rm -rf /var/log/upstart/*
  /bin/rm -f /var/log/*.gz /var/log/*.log /var/log/*.1 /var/log/*.2
  echo "1" > /var/run/ethos/updating.file
  echo "Cleaned up log files"
  echo "$(DATE) Running Pre-Update Commands"
  echo "$ETHOSVERSION" > /opt/ethos/etc/oldversion
  BASE="/opt/ethos-update/updates/$NEWVERSION"
  exec 1>/dev/tty
  exec 2>/dev/tty
  echo "$(DATE) Updating ethos to version $NEWVERSION, May take up to $TIMEREQUIRED minutes depending on your connection speed. You can log in on another session and type tail -f /var/log/ethos-update.log to view progress"
  if [ $DEVELOPMENT = "0" ];then
    exec 1>>/var/log/ethos-update.log
    exec 2>>/var/log/ethos-update.log
  fi
  ALLOWED=$(cat /opt/ethos/etc/allow.file)
  echo "$(DATE) Disallowing and stopping mining during the update process..."
  /opt/ethos/bin/disallow
  /opt/ethos/bin/minestop
  sleep 5
  ethminer=$(pgrep ethminer | wc -l)
  if [ "$ethminer" -ge "1" ];then
   exec 1>/dev/tty
   exec 2>/dev/tty
   echo "Unable to terminate mining processes, update cannot continue"
   echo "Reboot system and try again."
   exit 1
  fi
  /usr/bin/dpkg --configure -a
  echo -n "." >&3
  sed -i '/^deb http\:\/\/llvm.org\/apt\/trusty\/ llvm-toolchain-trusty-3.7 main/d' /etc/apt/sources.list
  sed -i '/^# deb-src http\:\/\/llvm.org\/apt\/trusty\/ llvm-toolchain-trusty-3.7 main/d' /etc/apt/sources.list
  sync
  echo "Updating apt-get package database...."
  echo -n "." >&3
  /usr/bin/apt-get -qq update
  echo -n "." >&3
}
function f.copycorefiles() {
  shopt -s globstar;shopt -s dotglob;cd "$BASE";FILES=( `echo **` )
  for f in "${FILES[@]}";do
    if [ -d "$f" ];then
    #echo "DEBUG: check if DIR $f exists"
    echo -n "." >&3
    mkdir -p "/$f"
    fi
  done
  for f in "${FILES[@]}";do
    if [ -f "$f" ];then
      #echo "DEBUG: copy file $f to /$f"
      echo -n "." >&3
      cp "$BASE/$f" "/$f"
    fi
  done
  if [ "$ETHOSVERSION" = "1.0|1.0.1|1.0.2|1.0.3" ];then
    cp /usr/share/zoneinfo/UTC /etc/localtime
  fi
  if [ "$ETHOSVERSION" \< "1.1.0" ] && [ ! -d "/var/lib/dkms/alx" ];then
    git clone https://github.com/jeremyb31/alx.git /tmp/alx
    dkms add /tmp/alx
    sleep 1
    dkms build alx/2.0
    sleep 1
    dkms install alx/2.0
    rm -rf /tmp/alx
  fi
}
function f.createfglrxskel() {
  echo "Setting up fglrx driver backup tree"
  if [ "$DRIVER" = "fglrx" ] && [ -e "/opt/ethos/etc/fglrx.setup" ] && [ "$1" -ne "reupdate-full" ];then
    echo "$DRIVER" > /opt/ethos/etc/driver.conf
    PREFIX="/opt/driver-switching/fglrx"
    DIRS=( usr/lib/fglrx/xorg/modules/extensions/fglrx usr/lib/fglrx/xorg/modules/drivers usr/lib/fglrx/xorg/modules/linux usr/lib32 usr/lib/dri usr/lib/xorg usr/lib/x86_64-linux-gnu\
           lib/fglrx usr/share/polkit-1/actions usr/share/lintian/overrides usr/lib/fglrx-core etc/ati usr/share/ati/lib64 etc/init.d usr/sbin usr/bin usr/lib/pxpress/xorg/modules )
    for f in "${DIRS[@]}";do
      if [ -d "/$f" ];then
        #echo "DEBUG: create DIR $PREFIX/$f "
        echo -n "." >&3
        mkdir -p "$PREFIX/$f"
      fi
    done
    files=( /usr/lib/libAMDXvBA.so.1 /usr/lib/libXvBAW.so.1 /usr/lib/libfglrx_dm.so.1 /usr/bin/aticonfig /usr/bin/atiode /usr/bin/fgl_glxgears /usr/bin/fglrxinfo\
            /usr/lib/libXvBAW.so.1.0 /usr/lib/dri/fglrx_dri.so /usr/lib/pxpress/xorg/modules/amdxmm.so /usr/lib/pxpress/xorg/modules/drivers /usr/lib/pxpress/xorg/modules/glesx.so \
            /usr/lib/pxpress/xorg/modules/linux /usr/lib/libamdocl64.so /usr/lib/libAMDXvBA.cap /usr/lib/libAMDXvBA.so.1.0 /usr/lib/libatiuki.so.1.0 /usr/lib/libGLEW.a /usr/lib/libglut.a\
            /usr/lib/libGLEW.so /usr/lib/libglut.so /usr/lib/libamdocl12cl64.so /usr/lib/libamdoclcl64.so /usr/lib/libAMDXvBA.so.1 /usr/lib/libatiuki.so.1 /usr/lib/x86_64-linux-gnu/libOpenCL.so\
            /usr/lib/x86_64-linux-gnu/libOpenCL.so.1 /usr/lib/x86_64-linux-gnu/libOpenCL.so.1.0.0 /usr/bin/amdconfig /usr/sbin/atieventsd /usr/sbin/amdnotifyui\
            /etc/init.d/atieventsd /usr/lib32/libAMDXvBA.so.1.0 /usr/lib/fglrx/10fglrx /usr/lib/fglrx/alt_ld.so.conf /usr/lib/fglrx/ld.so.conf /usr/lib/fglrx/libGL.so.1 /usr/lib/fglrx/libGL.so.1.2\
            /usr/lib/fglrx/switchlibGL /usr/lib/fglrx/switchlibglx /usr/lib/fglrx/xorg/modules /usr/lib/fglrx/xorg/modules/amdxmm.so /fglrx/etc/init.d/atieventsd /usr/share/lintian/overrides/fglrx-updates\
            /usr/lib/fglrx/xorg/modules/drivers/fglrx_drv.so /usr/lib/fglrx/xorg/modules/extensions/libglx.so /usr/lib/fglrx/xorg/modules/glesx.so /usr/lib/fglrx/xorg/modules/linux/libfglrxdrm.so\
            /usr/share/ati/lib64/libQtCore.so.4 /usr/share/ati/lib64/libQtGui.so.4 /etc/ati/amdpcsdb /etc/ati/amdpcsdb.default /etc/ati/atiapfxx.blb /etc/ati/atiapfxx.log /etc/ati/control\
            /usr/lib/fglrx-core/ld.so.conf /usr/lib/fglrx-core/unblacklist_ld.so.conf /lib/fglrx/core-modprobe.conf /usr/lib32/libatiuki.so.1 /usr/lib/libatiuki.so.1 /usr/share/lintian/overrides/fglrx-amdcccle-updates\
            /usr/share/polkit-1/actions/com.ubuntu.amdcccle.pkexec.policy /usr/share/fglrx )

    for f in "${files[@]}";do
      if [ -e "$f" ];then
        #echo "DEBUG: copy file $f to $PREFIX$f"
        echo -n "." >&3
        cp -r "$f" "$PREFIX$f"
      fi
    done
    echo "1" > /opt/ethos/etc/fglrx.setup
   fi
}



function f.1.0-extra-installs() {
  mv /home/ethos/remote /home/ethos/remote.conf
  mv /home/ethos/local /home/ethos/local.conf
  apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 437D05B5 3E5C1192
#Install new ati drivers
  f.checkdpkg
  /usr/bin/apt-get -fy install dos2unix nitrogen tmux mc nload xfce4-terminal
  echo -n "." >&3
  f.checkdpkg
  echo -n "." >&3
  /usr/bin/apt-get --only-upgrade -yo Dpkg::Options::="--force-confnew" install \
    base-files bind9-host ca-certificates cpio cpp-4.8 dnsutils eog \
    fglrx-amdcccle-updates fglrx-updates fglrx-updates-core g++-4.8 gcc-4.8 \
    gcc-4.8-base gir1.2-ibus-1.0 glib-networking glib-networking-common \
    glib-networking-services ibus ibus-gtk ibus-gtk3 ifupdown initscripts \
    libasan0 libatomic1 libbind9-90 libc-bin libc-dev-bin libc6 libc6-dbg \
    libc6-dev libc6-i386 libdns100 libgcc-4.8-dev libgcrypt11 \
    libgcrypt11-dev libgnutls-dev libgnutls-openssl27 libgnutls26 libgnutlsxx27 \
    libgomp1 libgraphite2-3 libgtk2.0-0 libgtk2.0-bin libgtk2.0-common \
    libgudev-1.0-0 libibus-1.0-5 libisc95 libisccc90 libisccfg90 libitm1 \
    libjasper1 liblwres90 libnettle4 libnss3 libnss3-nssdb libnuma1 \
    libpam-systemd libpci-dev libpci3 libpixman-1-0 libquadmath0 libssh-4 \
    libssl-dev libssl-doc libssl1.0.0 libstdc++-4.8-dev libstdc++6 \
    libsystemd-daemon0 libsystemd-journal0 libsystemd-login0 libtsan0 libudev1 \
    linux-libc-dev login multiarch-support ntpdate openssh-client openssh-server \
    openssh-sftp-server openssl passwd pciutils perl perl-base perl-modules \
    pm-utils python-ibus ssh-askpass-gnome systemd-services sysv-rc \
    sysvinit-utils thermald udev usbutils 
    echo -n "." >&3
}
function f.1.0.6-extra-files() {
  if [ ! -f "/usr/bin/hexchat" ]; then

    f.checkdpkg
    /usr/bin/apt-get -fy install hexchat 
    rm -f /usr/share/xfce4/helpers/firefox.desktop
  fi
}
function f.1.0.7-extra-files() {
  f.checkdpkg

  rm -f /opt/ethos/bin/info.php
  rm -f /usr/share/xfce4/helpers/firefox.desktop
  f.checkdpkg
  /usr/bin/apt-get -fy remove libethereum
  f.checkdpkg
  /usr/bin/apt-get -fy install xscreensaver-data-extra midori wmctrl rxvt-unicode
  if [ ! -f "/usr/bin/irssi" ]; then
    f.checkdpkg
    /usr/bin/apt-get -fy install irssi
    rm -f 
  fi
}
function f.1.1.0-extra-files(){
   f.install-amdgpu "$@"
}
function f.1.1.1-extra-files(){
  f.install-amdgpu "$@"
}
function f.1.1.2-extra-files(){
  #Cleanup the old amdgpu/alx files...
  rm -f /etc/ld.so.conf.d/amdapp_x86_64.conf
  rm -f /etc/profile.d/{AMDAPPSDK.sh,AMDAPPSDK.sh.bak}
  rm -rf /var/lib/dkms/alx
  echo -n "." >&3
  PACKAGES_ADD=""
  PACKAGES_MARK="hwdata thermald acl bc diffstat gettext tlsutils udisks2 update-inetd patchutils dconf-cli libfs6 x11-apps x11-session-utils x11-xfs-utils xinit" 
  PACKAGES_HOLD="grub2-common grub-common grub-pc grub-pc-bin fglrx-updates-core fglrx-core fglrx-amdcccle-updates fglrx-updates"
  if [ -d "/var/lib/dkms/amdgpu-pro" ]; then
    PACKAGES_REMOVE="$PACKAGES_REMOVE amdgpu-pro amdgpu-pro-core amdgpu-pro-clinfo amdgpu-pro-computing amdgpu-pro-dkms\
 amdgpu-pro-firmware amdgpu-pro-graphics amdgpu-pro-libopencl-dev amdgpu-pro-libopencl1 amdgpu-pro-opencl-icd\
 amdgpu-pro-vulkan-driver libdrm-amdgpu-pro-amdgpu1 libdrm-amdgpu-pro-tools libdrm-amdgpu-pro-dev\
 libdrm2-amdgpu-pro libegl1-amdgpu-pro libegl1-amdgpu-pro-dev libgbm-amdgpu-pro-dev libgbm1-amdgpu-pro libgl1-amdgpu-pro-dev\
 libgl1-amdgpu-pro-dri libgl1-amdgpu-pro-glx libgles2-amdgpu-pro libgles2-amdgpu-pro-dev libvdpau-amdgpu-pro xserver-xorg-video-amdgpu-pro\
  "
  fi
  echo -n "." >&3
  PACAKGES_REMOVE="$PACKAGES_REMOVE midori libjavascriptcoregtk-1.0-0 libwebkitgtk-1.0-0\
 libunique-1.0-0 libwebkitgtk-1.0-common libxss1 apg cheese-common cracklib-runtime desktop-file-utils gcr giblib1\
 gir1.2-ibus-1.0 gkbd-capplet gstreamer0.10-pulseaudio ibus-gtk ibus-gtk3\
 intel-gpu-tools libaa1 libavc1394-0 libc6-dbg libcaca0 libclutter-1.0-0\
 libclutter-1.0-common libclutter-gst-2.0-0 libclutter-gtk-1.0-0\
 libcogl-common libcogl-pango15 libcogl15 libcrack2 libdv4 libexempi3\
 libframe6 libgcr-ui-3-1 libgeis1 libgnome-bluetooth11\
 libgnome-control-center1 libgnome-menu-3-0 libgnomekbd-common libgnomekbd8\
 libgoa-1.0-0b libgoa-1.0-common libgoa-backend-1.0-1 libgrail6 libgrip0\
 libgstreamer-plugins-good1.0-0 libgucharmap-2-90-7 libibus-1.0-5\
 libiec61883-0 libnm-gtk-common libnm-gtk0 libp11-kit-gnome-keyring\
 libpam-gnome-keyring libplist1 libpulse-mainloop-glib0 libpwquality-common\
 libpwquality1 libraw1394-11 librest-0.7-0 libshout3 libsoup-gnome2.4-1\
 libspeex1 libsystemd-journal0 libtag1-vanilla libtag1c2a libupower-glib1\
 libv4l-0 libv4lconvert0 libvpx1 libwacom-common libwavpack1 libwnck-3-0\
 libwnck-3-common mousetweaks p11-kit p11-kit-modules\
 python-notify python3-apport python3-problem-report ubuntu-system-service\
"
echo -n "." >&3
  PACKAGES_REMOVE2="linux-headers-3.19.0-68 linux-headers-3.19.0-68-generic linux-headers-3.19.0-69 linux-headers-3.19.0-69-generic\
 linux-headers-generic-lts-vivid  linux-headers-3.19.0-25-generic linux-headers-3.19.0-25 linux-image-generic-lts-vivid linux-image-3.19.0-25-generic linux-image-extra-3.19.0-25-generic\
 linux-headers-3.19.0-66 linux-headers-3.19.0-66-generic"
  PACKAGES_REMOVE="$PACKAGES_REMOVE gnome-mahjongg gnome-accessibility-themes"
  PACKAGES_REMOVE="$PACKAGES_REMOVE remmina remmina-plugin-rdp remmina-plugin-vnc libfreerdp-plugins-standard libfreerdp1 libvncserver0 remmina-common\
 apparmor ubuntu-docs yelp sane-utils libsane libsane-common seahorse libgphoto2-6 libyelp0 yelp-xsl cups-filters cups-filters-core-drivers\
 cups-pk-helper doc-base example-content ghostscript ghostscript-x gnome-video-effects gvfs gvfs-fuse gvfs-bin gvfs-daemons gvfs-libs gnome-disk-utility\
 openprinting-ppds  ppp pppconfig pppoeconf kerneloops-daemon poppler-utils libgs9 libpoppler44 poppler-data onboard onboard-data friendly-recovery qpdf\
 gir1.2-appindicator3-0.1 gir1.2-atspi-2.0 libassuan0 libgpgme11 libssh-4  python3-cairo\
 python3-distupgrade python3-gi-cairo python3-update-manager intltool-debian libapparmor-perl libcolorhug1 libcupsfilters1 libcupsimage2 \
 libpaper-utils libpaper1 libqpdf13 libgphoto2-6 libgphoto2-l10n libgphoto2-port10 ntfs-3g libgs9-common libgusb2 libieee1284-3 groff-base\
 hardening-includes libapt-pkg-perl libarchive-zip-perl libautodie-perl libclass-accessor-perl libclone-perl libemail-valid-perl libfontembed1\
 libgd3 libijs-0.35 libio-pty-perl libio-string-perl libipc-run-perl libipc-system-simple-perl libjbig2dec0 liblist-moreutils-perl\
 libnet-dns-perl libnet-domain-tld-perl libnet-ip-perl libparse-debianchangelog-perl libperlio-gzip-perl libsub-identify-perl\
 libsub-name-perl libtext-levenshtein-perl vino libuuid-perl libyaml-tiny-perl t1utils gvfs-common indicator-application libappindicator3-1\
 libavahi-glib1 libdbusmenu-glib4 libdbusmenu-gtk3-4 fonts-tlwg-kinnari fonts-tlwg-loma fonts-tlwg-mono fonts-tlwg-norasi\
 fonts-tlwg-purisa fonts-tlwg-sawasdee fonts-tlwg-typewriter fonts-tlwg-garuda fonts-tibetan-machine fonts-takao-pgothic\
 fonts-tlwg-typist fonts-tlwg-typo fonts-tlwg-umpush fonts-tlwg-waree fonts-kacst fonts-kacst-one fonts-khmeros-core fonts-lao\
 fonts-lklug-sinhala fonts-nanum fonts-sil-abyssinica fonts-sil-padauk foomatic-db-compressed-ppds gdb\
 gnome-control-center gnome-control-center-data gnome-control-center-shared-data gnome-desktop3-data gnome-font-viewer\
 gnome-icon-theme gnome-icon-theme-symbolic gnome-keyring gnome-menus gnome-screenshot gnome-session-bin gnome-session-canberra\
 gnome-settings-daemon gnome-settings-daemon-schemas gnome-system-log gnome-terminal gnome-terminal-data gstreamer1.0-plugins-good\
 liblua5.2-0 libopencc1 libpyzy-1.0-0 python-ibus libimobiledevice4 libusbmuxd2 upower usbmuxd libwacom2 gsfonts gstreamer1.0-plugins-base\
 gstreamer0.10-alsa gstreamer1.0-x libcheese-gtk23 libcheese7 gstreamer1.0-plugins-base-apps gstreamer1.0-tools gstreamer1.0-clutter\
 gucharmap notify-osd notify-osd-icons scrot ttf-punjabi-fonts ttf-indic-fonts-core ubuntu-wallpapers-trusty xdiagnose\
  "
    ##questionable below
  PACKAGES_REMOVE="$PACKAGES_REMOVE man-db\
  apg cheese-common cracklib-runtime desktop-file-utils gcr giblib1\
  gir1.2-ibus-1.0 gkbd-capplet gstreamer0.10-pulseaudio hwdata ibus-gtk\
  ibus-gtk3 intel-gpu-tools libaa1 libavc1394-0 libcaca0 libclutter-1.0-0\
  libclutter-1.0-common libclutter-gst-2.0-0 libclutter-gtk-1.0-0\
  libcogl-common libcogl-pango15 libcogl15 libcrack2 libdv4 libexempi3\
  libframe6 libgcr-ui-3-1 libgeis1 libgnome-bluetooth11\
  libgnome-control-center1 libgnome-menu-3-0 libgnomekbd-common libgnomekbd8\
  libgoa-1.0-0b libgoa-1.0-common libgoa-backend-1.0-1 libgrail6 libgrip0\
  libgstreamer-plugins-good1.0-0 libgucharmap-2-90-7 libibus-1.0-5\
  libiec61883-0 liblua5.2-0 libnm-gtk-common libnm-gtk0 libopencc1\
  libp11-kit-gnome-keyring libpam-gnome-keyring libplist1\
  libpulse-mainloop-glib0 libpwquality-common libpwquality1 libpyzy-1.0-0\
  libraw1394-11 librest-0.7-0 libshout3 libsoup-gnome2.4-1 libspeex1\
  libsystemd-journal0 libtag1-vanilla libtag1c2a libupower-glib1 libv4l-0\
  libv4lconvert0 libvpx1 libwacom-common libwavpack1 libwnck-3-0\
  libwnck-3-common mousetweaks p11-kit p11-kit-modules python-ibus\
  python-notify python3-apport python3-problem-report ubuntu-system-service\
  "
  echo -n "." >&3
  PACKAGES_PURGE="$PACKAGES_PURGE linux-image-extra-3.19.0-25-generic linux-image-3.19.0-25-generic"
  if [ `dpkg -l | egrep "amdgpu-pro-core amdgpu-pro-firmware amdgpu-pro-vulkan-driver | wc -1 "` >= "1" ]; then
  PACKAGES_PURGE="$PACKAGES_PURGE amdgpu-pro-core amdgpu-pro-firmware amdgpu-pro-vulkan-driver"
  fi
  rm -f /etc/profile.d{AMDAPPSDK.sh,AMDAPPSDK.sh.bak}
  echo -n "...." >&3
  /usr/bin/apt-get -fy remove $PACKAGES_REMOVE
  echo -n "." >&3
  f.checkdpkg
  echo -n "." >&3
  /usr/bin/apt-get -fy remove $PACKAGES_REMOVE2
  f.checkdpkg
  echo -n "." >&3
  /usr/bin/apt-get -fy install $PACKAGES_ADD
  f.checkdpkg
  echo -n "." >&3
  /usr/bin/apt-mark manual $PACKAGES_MARK
  f.checkdpkg
  echo -n "." >&3
  /usr/bin/apt-mark hold $PACKAGES_HOLD
  f.checkdpkg 
  echo -n "." >&3
  /usr/bin/apt-get -fy purge $PACKAGES_PURGE
  f.checkdpkg
  #/usr/bin/apt-get -fy -o Dpkg::Options::="--force-confold" dist-upgrade
  ## Build a tarball with the necessary packages..and replace this ^
  #-o Dpkg::Options::="--force-confdef" 
  /usr/bin/update-alternatives --set editor /bin/nano
  if [ ! -f "/home/ethos/sgminer.stub.conf" ]; then
    cp /opt/ethos-update/updates/1.1.2/opt/ethos/etc/sgminer.stub.conf /home/ethos/sgminer.stub.conf
  fi
  f.install-amdgpu-1.1.2
}
function f.install-amdgpu-1.1.2(){
  mkdir -p /tmp/ethos-1.1.2-files/
  echo -n "...." >&3
  curl -o /tmp/ethos-1.1.2-files.tar.xz "$SERVER"/packages/1.1.2/ethos-1.1.2-files.tar.xz
  #Install new kernel
  if [ $? != "0" ];then
    echo "Download of ethos-1.1.2-files.tar.xz failed"
  fi
  echo -n "." >&3
  tar xf /tmp/ethos-1.1.2-files.tar.xz -C /tmp/ethos-1.1.2-files/
  if [ $? != "0" ];then
    echo "extract of ethos-1.1.2-files.tar.xz failed"
  fi
  cd /tmp/ethos-1.1.2-files; md5sum -c /tmp/ethos-1.1.2-files/md5sum.txt
  if [ $? != "0" ];then
    echo "md5sum of ethos-1.1.2-files.tar.xz does not match!"
  fi
    tar xf /tmp/ethos-1.1.2-files/fglrx-patches-4.8-ethos1.tar.xz -C /
  if [ $? != "0" ];then
   echo "extract of fglrx-patches-4.8-ethos1.tar.xz failed!"
  fi
  f.checkdpkg
  f.cleanupamdgpu
  echo "Installing upstream ubuntu security updates...."
  echo -n "." >&3
  dpkg -i /tmp/ethos-1.1.2-files/packages/libpam-modules-bin_1.1.8-1ubuntu2.2_amd64.deb
  f.checkdpkg
  echo -n "....." >&3
  dpkg -i /tmp/ethos-1.1.2-files/packages/libspeechd2_0.8-5ubuntu1_amd64.deb /tmp/ethos-1.1.2-files/packages/libxss1_1%3a1.2.2-1_amd64.deb /tmp/ethos-1.1.2-files/packages/libsystemd-daemon0_204-5ubuntu20.19_amd64.deb\
 /tmp/ethos-1.1.2-files/packages/systemd-services_204-5ubuntu20.19_amd64.deb /tmp/ethos-1.1.2-files/packages/chromium-codecs-ffmpeg-extra_52.0.2743.116-0ubuntu0.14.04.1.1134_amd64.deb\
 /tmp/ethos-1.1.2-files/packages/chromium-browser_52.0.2743.116-0ubuntu0.14.04.1.1134_amd64.deb /tmp/ethos-1.1.2-files/packages/apt_1.0.1ubuntu2.14_amd64.deb\
 /tmp/ethos-1.1.2-files/packages/apt-transport-https_1.0.1ubuntu2.14_amd64.deb /tmp/ethos-1.1.2-files/packages/apt-utils_1.0.1ubuntu2.14_amd64.deb\
 /tmp/ethos-1.1.2-files/packages/base-files_7.2ubuntu5.5_amd64.deb /tmp/ethos-1.1.2-files/packages/bash-completion_1%3a2.1-4ubuntu0.2_all.deb\
 /tmp/ethos-1.1.2-files/packages/bind9-host_1%3a9.9.5.dfsg-3ubuntu0.9_amd64.deb /tmp/ethos-1.1.2-files/packages/binutils_2.24-5ubuntu14.1_amd64.deb\
 /tmp/ethos-1.1.2-files/packages/coreutils_8.21-1ubuntu5.4_amd64.deb /tmp/ethos-1.1.2-files/packages/libpam-modules_1.1.8-1ubuntu2.2_amd64.deb\
 /tmp/ethos-1.1.2-files/packages/libpam-runtime_1.1.8-1ubuntu2.2_all.deb /tmp/ethos-1.1.2-files/packages/libpam-systemd_204-5ubuntu20.19_amd64.deb\
 /tmp/ethos-1.1.2-files/packages/curl_7.35.0-1ubuntu2.9_amd64.deb /tmp/ethos-1.1.2-files/packages/dkms_2.2.0.3-1.1ubuntu5.14.04.8_all.deb\
 /tmp/ethos-1.1.2-files/packages/dnsutils_1%3a9.9.5.dfsg-3ubuntu0.9_amd64.deb /tmp/ethos-1.1.2-files/packages/dpkg_1.17.5ubuntu5.7_amd64.deb\
 /tmp/ethos-1.1.2-files/packages/dpkg-dev_1.17.5ubuntu5.7_all.deb /tmp/ethos-1.1.2-files/packages/initramfs-tools_0.103ubuntu4.4_all.deb\
 /tmp/ethos-1.1.2-files/packages/initramfs-tools-bin_0.103ubuntu4.4_amd64.deb /tmp/ethos-1.1.2-files/packages/isc-dhcp-client_4.2.4-7ubuntu12.7_amd64.deb\
 /tmp/ethos-1.1.2-files/packages/isc-dhcp-common_4.2.4-7ubuntu12.7_amd64.deb /tmp/ethos-1.1.2-files/packages/joe_3.7-2.3ubuntu1_amd64.deb\
 /tmp/ethos-1.1.2-files/packages/libapt-inst1.5_1.0.1ubuntu2.14_amd64.deb /tmp/ethos-1.1.2-files/packages/libapt-pkg4.12_1.0.1ubuntu2.14_amd64.deb\
 /tmp/ethos-1.1.2-files/packages/libarchive13_3.1.2-7ubuntu2.3_amd64.deb /tmp/ethos-1.1.2-files/packages/libbind9-90_1%3a9.9.5.dfsg-3ubuntu0.9_amd64.deb\
 /tmp/ethos-1.1.2-files/packages/libcurl3_7.35.0-1ubuntu2.9_amd64.deb /tmp/ethos-1.1.2-files/packages/libcurl3-gnutls_7.35.0-1ubuntu2.9_amd64.deb\
 /tmp/ethos-1.1.2-files/packages/libcurl4-openssl-dev_7.35.0-1ubuntu2.9_amd64.deb  /tmp/ethos-1.1.2-files/packages/libssl-doc_1.0.1f-1ubuntu2.21_all.deb\
 /tmp/ethos-1.1.2-files/packages/libdns100_1%3a9.9.5.dfsg-3ubuntu0.9_amd64.deb /tmp/ethos-1.1.2-files/packages/libdpkg-perl_1.17.5ubuntu5.7_all.deb\
 /tmp/ethos-1.1.2-files/packages/libdrm2_2.4.67-1ubuntu0.14.04.1_amd64.deb /tmp/ethos-1.1.2-files/packages/libdrm-amdgpu1_2.4.67-1ubuntu0.14.04.1_amd64.deb\
 /tmp/ethos-1.1.2-files/packages/libdrm-dev_2.4.67-1ubuntu0.14.04.1_amd64.deb /tmp/ethos-1.1.2-files/packages/libdrm-intel1_2.4.67-1ubuntu0.14.04.1_amd64.deb\
 /tmp/ethos-1.1.2-files/packages/libdrm-nouveau2_2.4.67-1ubuntu0.14.04.1_amd64.deb /tmp/ethos-1.1.2-files/packages/liblwres90_1%3a9.9.5.dfsg-3ubuntu0.9_amd64.deb\
 /tmp/ethos-1.1.2-files/packages/libdrm-radeon1_2.4.67-1ubuntu0.14.04.1_amd64.deb /tmp/ethos-1.1.2-files/packages/libisc95_1%3a9.9.5.dfsg-3ubuntu0.9_amd64.deb\
 /tmp/ethos-1.1.2-files/packages/libisccc90_1%3a9.9.5.dfsg-3ubuntu0.9_amd64.deb /tmp/ethos-1.1.2-files/packages/libisccfg90_1%3a9.9.5.dfsg-3ubuntu0.9_amd64.deb\
 /tmp/ethos-1.1.2-files/packages/libpam0g_1.1.8-1ubuntu2.2_amd64.deb /tmp/ethos-1.1.2-files/packages/libssl1.0.0_1.0.1f-1ubuntu2.21_amd64.deb /tmp/ethos-1.1.2-files/packages/libssl-dev_1.0.1f-1ubuntu2.21_amd64.deb\
 /tmp/ethos-1.1.2-files/packages/libsystemd-login0_204-5ubuntu20.19_amd64.deb /tmp/ethos-1.1.2-files/packages/libudev1_204-5ubuntu20.19_amd64.deb\
 /tmp/ethos-1.1.2-files/packages/lsb-base_4.1+Debian11ubuntu6.2_all.deb /tmp/ethos-1.1.2-files/packages/wget_1.15-1ubuntu1.14.04.2_amd64.deb\
 /tmp/ethos-1.1.2-files/packages/lsb-release_4.1+Debian11ubuntu6.2_all.deb /tmp/ethos-1.1.2-files/packages/multiarch-support_2.19-0ubuntu6.9_amd64.deb\
 /tmp/ethos-1.1.2-files/packages/openssh-client_1%3a6.6p1-2ubuntu2.8_amd64.deb /tmp/ethos-1.1.2-files/packages/openssh-server_1%3a6.6p1-2ubuntu2.8_amd64.deb\
 /tmp/ethos-1.1.2-files/packages/openssh-sftp-server_1%3a6.6p1-2ubuntu2.8_amd64.deb /tmp/ethos-1.1.2-files/packages/openssl_1.0.1f-1ubuntu2.21_amd64.deb\
 /tmp/ethos-1.1.2-files/packages/php5-common_5.5.9+dfsg-1ubuntu4.19_amd64.deb /tmp/ethos-1.1.2-files/packages/php5-cli_5.5.9+dfsg-1ubuntu4.19_amd64.deb /tmp/ethos-1.1.2-files/packages/php5-readline_5.5.9+dfsg-1ubuntu4.19_amd64.deb\
 /tmp/ethos-1.1.2-files/packages/socat_1.7.2.3-1_amd64.deb /tmp/ethos-1.1.2-files/packages/thermald_1.4.3-5~14.04.4_amd64.deb\
 /tmp/ethos-1.1.2-files/packages/tzdata_2016f-0ubuntu0.14.04_all.deb /tmp/ethos-1.1.2-files/packages/udev_204-5ubuntu20.19_amd64.deb
 echo -n "." >&3

  echo "Installing new kernel / amdgpu packages..."

  dpkg -i /tmp/ethos-1.1.2-files/linux-libc-dev_4.8.0-rc6-ethos3-1_amd64.deb /tmp/ethos-1.1.2-files/linux-headers-4.8.0-rc6-ethos3_4.8.0-rc6-ethos3-1_amd64.deb\
 /tmp/ethos-1.1.2-files/linux-firmware-image-4.8.0-rc6-ethos3_4.8.0-rc6-ethos3-1_amd64.deb /tmp/ethos-1.1.2-files/linux-image-4.8.0-rc6-ethos3_4.8.0-rc6-ethos3-1_amd64.deb
  echo -n "." >&3
  f.checkdpkg

 dpkg -i /tmp/ethos-1.1.2-files/amdgpu-pro-firmware_16.30.3-315407-ethos2_amd64.deb /tmp/ethos-1.1.2-files/amdgpu-pro_16.30.3-315407-ethos2_amd64.deb\
 /tmp/ethos-1.1.2-files/amdgpu-pro-clinfo_16.30.3-315407-ethos2_amd64.deb /tmp/ethos-1.1.2-files/amdgpu-pro-computing_16.30.3-315407-ethos2_amd64.deb\
 /tmp/ethos-1.1.2-files/amdgpu-pro-opencl-icd_16.30.3-315407-ethos2_amd64.deb /tmp/ethos-1.1.2-files/amdgpu-pro-libopencl1_16.30.3-315407-ethos2_amd64.deb\
 /tmp/ethos-1.1.2-files/libdrm2-amdgpu-pro_16.30.3-315407-ethos2_amd64.deb /tmp/ethos-1.1.2-files/libdrm-amdgpu-pro-amdgpu1_16.30.3-315407-ethos2_amd64.deb\
 /tmp/ethos-1.1.2-files/libdrm-amdgpu-pro-dev_16.30.3-315407-ethos2_amd64.deb /tmp/ethos-1.1.2-files/libdrm-amdgpu-pro-tools_16.30.3-315407-ethos2_amd64.deb
 if [ "$DRIVER" = "amdgpu" ]; then
  ln -snf /usr/lib/x86_64-linux-gnu/amdgpu-pro/libOpenCL.so.1 /usr/lib/libOpenCL.so
 fi
 echo -n "." >&3
 FGLRX_VERSIONS=$(dkms status | egrep "3.19|4.4" | cut -f3 -d" " | sed 's/,//g' | xargs)
 for i in $FGLRX_VERSIONS; do
 dkms remove fglrx-updates-core/15.201 -k $i
 sleep 2
 done
}
function f.install-amdgpu() {
  mkdir -p /tmp/ethos-1.1.0-files/
  curl -o /tmp/ethos-1.1.0-files.tar.xz "$SERVER"/packages/1.1.0/ethos-1.1.0-files.tar.xz
  if [ $? != "0" ];then
    echo "Download of ethos-1.1.0-files.tar.xz failed"
  fi
  tar xf /tmp/ethos-1.1.0-files.tar.xz -C /tmp/ethos-1.1.0-files/
  if [ $? != "0" ];then
    echo "extract of ethos-1.1.0-files.tar.xz failed"
  fi
  cd /tmp/ethos-1.1.0-files; md5sum -c /tmp/ethos-1.1.0-files/md5sum.txt
  if [ $? != "0" ];then
    echo "md5sum of ethos-1.1.0-files.tar.xz does not match!"
  fi
  tar xf /tmp/ethos-1.1.0-files/fglrx-patches.tar.xz -C /
  if [ $? != "0" ];then
   echo "extract of fglrx-patches.tar.xz failed!"
  fi
  f.checkdpkg
  echo "Installing new kernel / amdgpu packages..."
  dpkg -i /tmp/ethos-1.1.0-files/kernel/linux-headers-4.4.0-31_4.4.0-31.50~14.04.1_all.deb /tmp/ethos-1.1.0-files/kernel/linux-headers-4.4.0-31-generic_4.4.0-31.50~14.04.1_amd64.deb\
  /tmp/ethos-1.1.0-files/kernel/linux-image-4.4.0-31-generic_4.4.0-31.50~14.04.1_amd64.deb /tmp/ethos-1.1.0-files/kernel/linux-image-extra-4.4.0-31-generic_4.4.0-31.50~14.04.1_amd64.deb\
  /tmp/ethos-1.1.0-files/amdgpu-packages/amdgpu-pro_16.30.3-306809-ethos1_amd64.deb /tmp/ethos-1.1.0-files/amdgpu-packages/amdgpu-pro-clinfo_16.30.3-306809-ethos1_amd64.deb\
  /tmp/ethos-1.1.0-files/amdgpu-packages/amdgpu-pro-computing_16.30.3-306809-ethos1_amd64.deb /tmp/ethos-1.1.0-files/amdgpu-packages/amdgpu-pro-core_16.30.3-306809-ethos1_amd64.deb\
  /tmp/ethos-1.1.0-files/amdgpu-packages/amdgpu-pro-dkms_16.30.3-306809_all.deb /tmp/ethos-1.1.0-files/amdgpu-packages/amdgpu-pro-firmware_16.30.3-306809_amd64.deb\
  /tmp/ethos-1.1.0-files/amdgpu-packages/amdgpu-pro-graphics_16.30.3-306809-ethos1_amd64.deb /tmp/ethos-1.1.0-files/amdgpu-packages/amdgpu-pro-libopencl1_16.30.3-306809-ethos1_amd64.deb\
  /tmp/ethos-1.1.0-files/amdgpu-packages/amdgpu-pro-libopencl-dev_16.30.3-306809-ethos1_amd64.deb /tmp/ethos-1.1.0-files/amdgpu-packages/amdgpu-pro-opencl-icd_16.30.3-306809-ethos1_amd64.deb\
  /tmp/ethos-1.1.0-files/amdgpu-packages/amdgpu-pro-vulkan-driver_16.30.3-306809-ethos1_amd64.deb /tmp/ethos-1.1.0-files/amdgpu-packages/libdrm2-amdgpu-pro_16.30.3-306809-ethos1_amd64.deb\
  /tmp/ethos-1.1.0-files/amdgpu-packages/libdrm-amdgpu-pro-amdgpu1_16.30.3-306809-ethos1_amd64.deb /tmp/ethos-1.1.0-files/amdgpu-packages/libdrm-amdgpu-pro-dev_16.30.3-306809-ethos1_amd64.deb\
  /tmp/ethos-1.1.0-files/amdgpu-packages/libdrm-amdgpu-pro-tools_16.30.3-306809-ethos1_amd64.deb /tmp/ethos-1.1.0-files/amdgpu-packages/libegl1-amdgpu-pro_16.30.3-306809-ethos1_amd64.deb\
  /tmp/ethos-1.1.0-files/amdgpu-packages/libegl1-amdgpu-pro-dev_16.30.3-306809-ethos1_amd64.deb /tmp/ethos-1.1.0-files/amdgpu-packages/libgbm1-amdgpu-pro_16.30.3-306809-ethos1_amd64.deb\
  /tmp/ethos-1.1.0-files/amdgpu-packages/libgbm-amdgpu-pro-dev_16.30.3-306809-ethos1_amd64.deb /tmp/ethos-1.1.0-files/amdgpu-packages/libgl1-amdgpu-pro-dev_16.30.3-306809-ethos1_amd64.deb\
  /tmp/ethos-1.1.0-files/amdgpu-packages/libgl1-amdgpu-pro-dri_16.30.3-306809-ethos1_amd64.deb /tmp/ethos-1.1.0-files/amdgpu-packages/libgl1-amdgpu-pro-glx_16.30.3-306809-ethos1_amd64.deb\
  /tmp/ethos-1.1.0-files/amdgpu-packages/libgles2-amdgpu-pro_16.30.3-306809-ethos1_amd64.deb /tmp/ethos-1.1.0-files/amdgpu-packages/libgles2-amdgpu-pro-dev_16.30.3-306809-ethos1_amd64.deb\
  /tmp/ethos-1.1.0-files/amdgpu-packages/libvdpau-amdgpu-pro_16.30.3-306809-ethos1_amd64.deb /tmp/ethos-1.1.0-files/amdgpu-packages/xserver-xorg-video-amdgpu-pro_16.30.3-306809-ethos1_amd64.deb
  echo "exacting ethos-amdgpu-extras.tar.xz"
  tar xf /tmp/ethos-1.1.0-files/amdgpu-ethos-extras.tar.xz -C /opt/driver-switching/amdgpu/
  if [ "$?" != "0" ]; then
    echo "Failed to extract amdgpu-ethos-extras"
  fi
  usermod -a -G video ethos
  usermod -a -G root ethos
  echo "ethos-1.1.0-extra-files install complete"

 #1.0.6 /1.0.7 upgrade have kernel 3.19 which causes dkms build to fail, we dont want it for that kernel anyway, so lets make it for the right one.
  /usr/sbin/dkms install amdgpu-pro/16.30.3-306809 -k 4.4.0-31-generic
  sleep 2
  /usr/sbin/dkms remove alx/2.0 -k 4.4.0-31-generic
  f.checkdpkg
  rm -f /opt/ethos/bin/info.php
  rm -f /usr/share/xfce4/helpers/firefox.desktop
  PACKAGES_REMOVE="$PACKAGES_REMOVE libethereum"
  f.checkdpkg
  PACKAGES_ADD="$PACKAGES_ADD xscreensaver-data-extra midori wmctrl rxvt-unicode"
  if [ ! -f "/usr/bin/irssi" ]; then
    PACKAGES_ADD="$PACKAGES_ADD irssi"
  fi
  if [ ! -f "/usr/bin/hexchat" ]; then
    PACKAGES_ADD="$PACKAGES_ADD hexchat" 
  fi
  /usr/bin/apt-get -fy install "$PACKAGES_ADD"
  f.createfglrxskel "$@"
} 
function f.postrun() {
  /usr/bin/apt-get -y clean
  echo -n "." >&3
  f.checkdpkg
  /usr/bin/apt-get -y autoclean
  echo -n "." >&3
  f.checkdpkg
  /usr/bin/apt-get -fy autoremove
  echo -n "." >&3
  rm -f /home/ethos/eth-proxy.pid
  echo "$(DATE) Running Post-Update Commands"
  echo -n "." >&3
  f.setpermissions
  echo "$NEWVERSION_NUMBER" > /opt/ethos/etc/version
  /bin/rm -f /home/ethos/.ethash/full*
  if [ ! -f "/opt/ethos/etc/allow.file" ]; then
    echo "0" > /opt/ethos/etc/allow.file
  fi
  echo -n "." >&3
  /usr/sbin/update-initramfs -u
  #Temporarily always update grub until better logic is written.
  #if [ "$UPDATEGRUB" -eq "1" ];then
  echo -n "." >&3
  /usr/sbin/update-grub
  #fi

#Update The Proxy
    killall -9 python
        rm -rf /opt/eth-proxy
        mkdir -p /opt/eth-proxy
        echo -n "." >&3
        tar xjpf /opt/ethos-update/proxy-updates/$NEWVERSION/eth-proxy.tar.bz2 -C /opt/
        chown -R ethos.ethos /opt/eth-proxy
        #kill it again.
        rm -f /home/ethos/eth-proxy.pid 
        
#Check if the reboot.file exists and if not create it.
  if [ ! -f /opt/ethos/etc/reboot.file ];then
    touch /opt/ethos/etc/reboot.file
    chmod 664 /opt/ethos/etc/reboot.file
  fi
#cleanup
  DEPRECATED=( "/opt/ethos/lib/GPUMonitor.php" "/opt/ethos/lib/EthosConf.php" "/opt/ethos/lib/EthosFarmId.php"\
  "/opt/ethos/lib/MinerProcess.php /usr/src/alx-2.0" "/usr/share/xfce4/helpers/firefox.desktop" "/usr/share/applications/midori.desktop" "/usr/share/xfce4/helpers/midori.desktop"\
  "/usr/share/applications/midori-private.desktop" "/home/ethos/.config/autostart/ethos-custom.desktop"\
  "/var/lib/menu-xdg/applications/menu-xdg/X-Debian-Applications-Network-Web-Browsing-midori.desktop"\
  "/opt/ethos/bin/misc-crons.sh" "/var/spool/cron/crontabs/root" "/opt/ethos/bin/check-readonly.sh" "/opt/ethos/bin/minertimer"\
  "/opt/ethos/sbin/ethos-fan-daemon" "/home/ethos/.config/autostart/ethos-fan-daemon.desktop" "/opt/ethos/bin/atitweak"\
  "/opt/ethos/bin/minertimer" "/opt/ethos/bin/mine" "/var/log/ethosupdate.log" "/usr/local/bin/helpme" "/opt/ethos/lib/send.php"\
  "/opt/ethos/bin/update.php" "/opt/ethos/etc/motdpart" "/etc/conky/conky.conf" "/etc/conky/conky_no_x11.conf"\
  )
  for f in "${DEPRECATED[@]}"; do
    if [ -f "$f" ];then
      rm -f "$f"
    fi
  done
  if [ ! "`readlink /opt/ethos/bin/log`" -ef "/opt/ethos/bin/show" ];then
    rm -f /opt/ethos/bin/log
    ln -s /opt/ethos/bin/show /opt/ethos/bin/log
  fi
  if [ ! "`readlink /opt/ethos/bin/allow`" -ef "/opt/ethos/bin/minestart" ];then
    rm -f /opt/ethos/bin/minestart
    ln -s /opt/ethos/bin/allow /opt/ethos/bin/minestart
  fi
  if [ ! "`readlink /usr/local/bin/apt-get-ubuntu`" -ef "/usr/bin/apt-get" ];then
      ln -s /usr/bin/apt-get /usr/local/bin/apt-get-ubuntu
  fi
  #touch /opt/ethos/etc/.iommufixed
  rm -rf /boot/initrd.img-*.old-dkms
  rm -rf /opt/AMDAPPSDK-3.0/samples
  rm -rf /var/cache/apt-xapian-index/*
  rm -rf /var/backups/*
  rm -rf /usr/share/icons/HighContrast
  rm -rf /var/cache/apt/*
  rm -rf /root/ethos3
  rm -rf /ethos.test
  rm -rf /lib/modules/3.19.0-68-generic
  rm -rf /eth-proxy.tar.bz2
  #Cleanup /var/log and move it to ramdisk
  LOGRAMDISK=$(grep -c "tmpfs   /var/log    tmpfs    defaults,noatime,nosuid,mode=0755,size=100m    0 0" /etc/fstab)
  if [ "$LOGRAMDISK" = "0" ]; then
   rm -rf /var/log/*
   echo "tmpfs   /var/log    tmpfs    defaults,noatime,nosuid,mode=0755,size=100m    0 0" >> /etc/fstab
  fi
  sync
  if [ "$ALLOWED" -eq "0" ]; then
    echo "0" > /opt/ethos/etc/allow.file
    echo "$(DATE) - Mining Disallowed before script start, keeping it that way."
  else
    echo "1" > /opt/ethos/etc/allow.file
    echo "$(DATE) - Mining Allowed before script start, keeping it that way."
  fi
  exec 1>/dev/tty
  exec 2>/dev/tty
  echo "" 
  sync
  sleep 10
  echo "2" > /var/run/ethos/updating.file
  echo "$(DATE) - ethOS Update on $HOSTNAME Finished, please reboot. see /var/log/ethos-update.log for details about what was updated."
  exit 0
}

function f.do-update(){
    f.prerun
    if [ "$ETHOSVERSION" = "1.0" ];then
      f.1.0-extra-installs
    fi
    if f.function_exists "f.$NEWVERSION-extra-files"; then
      f.$NEWVERSION-extra-files
    fi
    f.copycorefiles
    f.postrun
}

if [ ! -z "$1" ]; then
  case "$1" in
    getbacktorelease )
      echo "1.0.7" > /opt/ethos/etc/version
      ETHOSVERSION=1.0.7
    ;; 
    1.0.7 )
      ETHOSVERSION="1.0.6"
      RELEASEVERSION="1.0.7"
      NEWVERSION="1.0.7"
      NEWVERSION_NUMBER="1.0.7"
      TIMEREQUIRED="5" 
    ;;
    reupdate )
      OLDVERSION=$(cat /opt/ethos/etc/oldversion)
      if [ -z "$OLDVERSION" ]; then 
        ETHOSVERSION="1.0.6"
      else
        ETHOSVERSION="$OLDVERSION"
      fi
    ;;
    * )
      echo "Invalid commandline argument \"$1\"."
      echo "Usage:"
      echo "\"sudo ethos-update\" - Update to latest ethos version"
      echo "\"sudo ethos-update reupdate\" - Reapply most recent update." 
      exit 0
    ;;
  esac
else
  if [ "$ETHOSVERSION" \> "$RELEASEVERSION" ]; then
    ETHOSVERSION="dev"
  fi
fi

f.updatescript "$@"

case $ETHOSVERSION in
  1.0 | 1.0.1 )
  TIMEREQUIRED="30"
  f.do-update
  ;;
  1.0.2 | 1.0.3 )
  TIMEREQUIRED="10"
  f.do-update
  ;;
  1.0.4 | 1.0.5 | 1.0.6 | 1.0.7 | 1.1.0 )
  TIMEREQUIRED="20"
  f.do-update
  ;;
  1.1.1 | dev )
  TIMEREQUIRED="5"
  f.latest
  ;;
  
esac



