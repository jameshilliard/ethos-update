#!/bin/bash
# ethOS Update Script
# LICENSE AGREEMENT
#
# File Version See $VERSION Variable (c) 2016 Dale Chapman, sling00@gmail.com (“Author”).
#
# By using this file, you agree to the following:
#
# This file has been licensed to gpuShack for the exclusive use and distribution as part of ethOS. All other previous licenses
# of this file have been revoked. This license does not expire and allows for any modification, distribution, and/or derivative work
# by gpuShack and by the Author. This license extends to gpuShack’s owners, operators, officers, and contractors, where
# applicable.
#
# The Author expressly forbids and revokes usage of this file, as well as any previous iterations of this file, in any
# operating system other than ethOS. Any fork of ethOS, third party or otherwise, may not use this file without express written
# permission from the Author.
#
# Personal Use
#
# End users may modify and use this script for personal use, but may not redistribute or include in a larger work, in whole, or
# in part, without express written permission from the Author.
#
# Version History
#
# v1.x - EthOS Release
# v.1 - Development Release
#
# Portions derived from previous work by Author
#
# Red Goat License (v) 1.0
#
# This file is released under the "Small Goat with Red Eyes" license. Breaking the above license agreement will result in a
# small goat with red eyes visiting you while you sleep.
if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root, please rerun as \"sudo ethos-update\"" 
   exit 1
fi
UPDATESERVER="http://get.ethosdistro.com/ethos-updates/"
DEVELOPMENT=0 
LOG="/var/log/ethos-update.log"
CURLARGS="-f -s -S -k"
SCRIPT_NEW_VERSION="$(curl $CURLARGS http://get.ethosdistro.com/ethos-updates/version/version)"
SCRIPT_VERSION="1.18"
ETHOSVERSION=$(cat /opt/ethos/etc/version)
HOSTNAME=`cat /etc/hostname`
CONF="/home/ethos/local.conf"
UPDATEGRUB="0"
UPDATEINITRAMFS="0"
UPDATEPROXY="0"

echo "ethOS update on $HOSTNAME starting..."

BRANCH=`grep -Po "(?<=^branch."$HOSTNAME".)(.*)" "$CONF" | xargs`
if [ -z "$BRANCH" ]; then
	BRANCH=`grep -Po "(?<=^globalbranch.)(.*)" "$CONF" | xargs`
fi
if [ -z "$BRANCH" ]; then
	BRANCH="release"
fi

if [ $DEVELOPMENT = "0" ] ; then
  exec 1>>/var/log/ethos-update.log
  exec 2>>/var/log/ethos-update.log
fi
function f.updatescript() {
		echo "Checking if ethos-update is up to date........"
	if [ $SCRIPT_NEW_VERSION \> $SCRIPT_VERSION ]; then
		echo "Getting latest version of ethos-update"
		wget http://get.ethosdistro.com/ethos-updates/ethos-update/ethos-update.tar.gz -O /tmp/ethos-update.tar.gz
		if [ $? -eq "0" ]; then
			rm -rf /tmp/ethos-update/
			mkdir -p /tmp/ethos-update/
			tar xpf /tmp/ethos-update.tar.gz -C /tmp/ethos-update/
			if [ $? -eq "0" ]; then
#				BASE=`ls /tmp/ethos-update/`
				rm -rf /opt/ethos-update/*
				mv /tmp/ethos-update/ethos-update/* /opt/ethos-update/
				echo "Updated to latest version, relaunching."
				rm /tmp/ethos-update.tar.gz
				rm -rf /tmp/ethos-update/
				cd ~
				exec /opt/ethos-update/ethos-update
			else
				echo "Failed to extract etho-update tarball. Rerun script to try again."
			fi
		else 
			echo "Failed to download update from repo, try again in a few minutes."
			exit 0
		fi
	else 
		echo "Script up to date"
	fi
}

function f.1.0-1.0.4() {
		/opt/ethos-update/updates/1.0.4/1.0-1.0.4.sh
}
function f.1.0.3-1.0.4() {
		/opt/ethos-update/updates/1.0.4/1.0.3-1.0.4.sh
}
function f.latest() {
	chown -R ethos.ethos /home/ethos
	cp  /opt/ethos-update/updates/1.0.4/opt/ethos/bin/gethelp /opt/ethos/bin/gethelp
	cp /opt/ethos-update/updates/1.0.4/opt/ethos/sbin/ethos-watchdog /opt/ethos/sbin/ethos-watchdog
	cp /opt/ethos-update/updates/1.0.4/opt/ethos/sbin/ethos-overclock /opt/ethos/sbin/ethos-overclock
	cp /opt/ethos-update/updates/1.0.4/opt/ethos/sbin/ethos-readconf /opt/ethos/sbin/ethos-readconf
	cp /opt/ethos-update/updates/1.0.4/opt/ethos/lib/functions.php /opt/ethos/lib/functions.php
	exec 1>/dev/tty
	exec 2>/dev/tty
	if [ -f "/opt/ethos/sbin/ethos-fan-daemon" ]; then
		if [ -f "/home/ethos/.config/autostart/ethos-fan-daemon.desktop" ]; then
			rm -f /home/ethos/.config/autostart/ethos-fan-daemon.desktop
		fi
		rm -f /opt/ethos/sbin/ethos-fan-daemon
	fi
	echo "Your version of ethOS is up to date. Version: $ETHOSVERSION"	
}
function f.prerun() {
	echo "prerun commands"
}
function f.copycorefiles() {
        shopt -s globstar;shopt -s dotglob;cd "$BASE";FILES=( `echo **` )
        for f in "${FILES[@]}"; do
        if [ -f "$f" ];then
                #echo "copy file $f to /$f"
                cp "$BASE/$f" "/$f"
        fi
        if [ -d "$f" ];then
                #echo "check if DIR $f exists"
                mkdir -p "$f"
        fi
        done
        if [ "$ETHOSVERSION" = "1.0|1.0.1|1.0.2|1.0.3" ]; then
			cp /usr/share/zoneinfo/UTC /etc/localtime
		fi
}
function f.setpermissions() {
        chown -R ethos.ethos /home/ethos
        chown -R root.root /etc/init/ethos-*
        chown root.root /usr/share/initramfs-tools/scripts/init-top/gpulist
		chmod 755 /usr/share/initramfs-tools/scripts/init-top/gpulist
		chmod 0644 /home/ethos/.bashrc
		chown root.root /root/.bashrc
		chmod 0644 /root/.bashrc
		chown root.root /root/.profile
		chown -R ethos.ethos /opt/eth-proxy
}



function f.postrun() {
	echo "postupdate commands"
	f.setpermissions
	if [ "$UPDATEINITRAMFS" = "1" ];then
		/usr/sbin/update-initramfs -u
	fi
	if [ "$UPDATEGRUB" = "1" ];then
		/usr/sbin/update-grub
	fi
	#Update ATITweak
	if [ $UPDATEATITWEAK = "1" ]; then
		rm -f /usr/local/bin/atitweak
		cp $BASE/usr/local/bin/atitweak /usr/local/bin/atitweak
	fi
#Update The Proxy
	if [ $UPDATEPROXY = "1" ]; then
        rm -rf /opt/eth-proxy
        mkdir -p /opt/eth-proxy
        git clone -b 1.0.2 https://github.com/sling00/eth-proxy /opt/eth-proxy
    fi
#Check if the reboot.file exists and if not create it.
	if [ ! -f /opt/ethos/etc/reboot.file ];then
		touch /opt/ethos/etc/reboot.file
		chmod 664 /opt/ethos/etc/reboot.file
	fi
#cleanup
	DEPRECATED=( "/opt/ethos/sbin/ethos-fan-daemon" "/home/ethos/.config/autostart/ethos-fan-daemon.desktop" "/opt/ethos/bin/atitweak" "/opt/ethos/bin/minertimer" "/opt/ethos/bin/mine" "/var/log/ethosupdate.log" "/usr/local/bin/helpme" "/opt/ethos/lib/send.php" "/opt/ethos/bin/update.php" "/opt/ethos/etc/motdpart" "/etc/conky/conky.conf" "/etc/conky/conky_no_x11.conf" " /home/ethos/.config/autostart/ethos-custom.desktop")
	for f in "${DEPRECATED[@]}"; do
        if [ -f "$f" ];then
                rm -f "$f"
        fi
    done
	if [ ! "`readlink /opt/ethos/bin/log`" -ef "/opt/ethos/bin/show" ];then
		rm -f /opt/ethos/bin/log
		ln -s /opt/ethos/bin/show /opt/ethos/bin/log
	fi
	if [ ! "`readlink /opt/ethos/bin/allow`" -ef "/opt/ethos/bin/minestart" ];then
		rm -f /opt/ethos/bin/minestart
		ln -s /opt/ethos/bin/allow /opt/ethos/bin/minestart
	fi
	if [ ! "`readlink /usr/local/bin/apt-get-ubuntu`" -ef "/usr/bin/apt-get" ];then
    	ln -s /usr/bin/apt-get /usr/local/bin/apt-get-ubuntu
	fi
	#touch /opt/ethos/etc/.iommufixed
	rm -rf /var/cache/apt-xapian-index/*
	rm -rf /var/backups/*
	rm -rf /var/cache/apt/*
}
f.updatescript

if [ "$BRANCH" = "release" ]; then
case $ETHOSVERSION in
	1.0 | 1.0.1 )
	f.1.0-1.0.4
	;;
	1.0.2 | 1.0.3 )
	f.1.0.3-1.0.4
	;;
	1.0.4 )
	f.latest
	;;
esac
fi

if [ "$BRANCH" = "development" ]; then
case $ETHOSVERSION in
	1.0 | 1.0.1 )
	f.1.0-1.0.5
	;;
	1.0.2 | 1.0.3 )
	f.1.0.3-1.0.5
	;;
	1.0.4 )
	f.1.0.4-1.0.5b
	;;
esac
fi



